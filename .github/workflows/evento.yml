name: Agendamento de Evento

on:
  issues:
    types: [opened]

jobs:
  agendar-evento:
    runs-on: ubuntu-latest
    env:
      ISSUE_BODY: "${{ github.event.issue.body }}"
    if: contains(github.event.issue.title, '[Evento]:')    
    steps:
      - name: Agendar Evento
        uses: actions/checkout@v3

      - name: Issue Forms Body Parser
        id: parse
        uses: zentered/issue-forms-body-parser@v2.1.1
        with:
          body: ${{ env.ISSUE_BODY }}
      
      - name: transformar dados
        id: tratamento
        run: |
          evento=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .evento.text | sed 's/"//g')
          site=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .site.text | sed 's/"//g')
          tipo=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .tipo.text | sed 's/"//g')
          local=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .local.text | sed 's/"//g')
          mes=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .mes.text | sed 's/"//g')
          dia=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq .dia.text | sed 's/"//g')
          
          echo "evento=$evento" >> $GITHUB_OUTPUT
          echo "site=$site" >> $GITHUB_OUTPUT
          echo "tipo=$tipo" >> $GITHUB_OUTPUT
          echo "local=$local" >> $GITHUB_OUTPUT
          echo "mes=$mes" >> $GITHUB_OUTPUT
          echo "dia=$dia" >> $GITHUB_OUTPUT

      - name: Atualizar README.md
        run: |
          linha=$(cat README.md | grep -n "${{ steps.tratamento.outputs.mes }}:END" | cut -d: -f1)
          
          dadosevento="- ${{ steps.tratamento.outputs.dia }} - [${{ steps.tratamento.outputs.evento }}](${{ steps.tratamento.outputs.site }})  - ${{ steps.tratamento.outputs.local }} - ${{ steps.tratamento.outputs.tipo }}"
          echo "$dadosevento"
          